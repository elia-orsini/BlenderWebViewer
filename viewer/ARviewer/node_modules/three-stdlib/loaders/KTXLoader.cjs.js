"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("three");class t extends e.CompressedTextureLoader{constructor(e){super(e)}parse(e,t){const s=new r(e,1);return{mipmaps:s.mipmaps(t),width:s.pixelWidth,height:s.pixelHeight,format:s.glInternalFormat,isCubemap:6===s.numberOfFaces,mipmapCount:s.numberOfMipmapLevels}}}class r{constructor(e,t){this.arrayBuffer=e;const r=new Uint8Array(this.arrayBuffer,0,12);if(171!==r[0]||75!==r[1]||84!==r[2]||88!==r[3]||32!==r[4]||49!==r[5]||49!==r[6]||187!==r[7]||13!==r[8]||10!==r[9]||26!==r[10]||10!==r[11])return void console.error("texture missing KTX identifier");const s=Uint32Array.BYTES_PER_ELEMENT,i=new DataView(this.arrayBuffer,12,13*s),n=67305985===i.getUint32(0,!0);this.glType=i.getUint32(1*s,n),this.glTypeSize=i.getUint32(2*s,n),this.glFormat=i.getUint32(3*s,n),this.glInternalFormat=i.getUint32(4*s,n),this.glBaseInternalFormat=i.getUint32(5*s,n),this.pixelWidth=i.getUint32(6*s,n),this.pixelHeight=i.getUint32(7*s,n),this.pixelDepth=i.getUint32(8*s,n),this.numberOfArrayElements=i.getUint32(9*s,n),this.numberOfFaces=i.getUint32(10*s,n),this.numberOfMipmapLevels=i.getUint32(11*s,n),this.bytesOfKeyValueData=i.getUint32(12*s,n),0===this.glType?(this.numberOfMipmapLevels=Math.max(1,this.numberOfMipmapLevels),0!==this.pixelHeight&&0===this.pixelDepth?0===this.numberOfArrayElements?this.numberOfFaces===t?this.loadType=0:console.warn("number of faces expected"+t+", but found "+this.numberOfFaces):console.warn("texture arrays not currently supported"):console.warn("only 2D textures currently supported")):console.warn("only compressed formats currently supported")}mipmaps(e){const t=[];let r=64+this.bytesOfKeyValueData,s=this.pixelWidth,i=this.pixelHeight;const n=e?this.numberOfMipmapLevels:1;for(let e=0;e<n;e++){const e=new Int32Array(this.arrayBuffer,r,1)[0];r+=4;for(let n=0;n<this.numberOfFaces;n++){const n=new Uint8Array(this.arrayBuffer,r,e);t.push({data:n,width:s,height:i}),r+=e,r+=3-(e+3)%4}s=Math.max(1,.5*s),i=Math.max(1,.5*i)}return t}}exports.KTXLoader=t;

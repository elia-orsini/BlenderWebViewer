"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("three");const e=[[-.525731,0,.850651],[-.442863,.238856,.864188],[-.295242,0,.955423],[-.309017,.5,.809017],[-.16246,.262866,.951056],[0,0,1],[0,.850651,.525731],[-.147621,.716567,.681718],[.147621,.716567,.681718],[0,.525731,.850651],[.309017,.5,.809017],[.525731,0,.850651],[.295242,0,.955423],[.442863,.238856,.864188],[.16246,.262866,.951056],[-.681718,.147621,.716567],[-.809017,.309017,.5],[-.587785,.425325,.688191],[-.850651,.525731,0],[-.864188,.442863,.238856],[-.716567,.681718,.147621],[-.688191,.587785,.425325],[-.5,.809017,.309017],[-.238856,.864188,.442863],[-.425325,.688191,.587785],[-.716567,.681718,-.147621],[-.5,.809017,-.309017],[-.525731,.850651,0],[0,.850651,-.525731],[-.238856,.864188,-.442863],[0,.955423,-.295242],[-.262866,.951056,-.16246],[0,1,0],[0,.955423,.295242],[-.262866,.951056,.16246],[.238856,.864188,.442863],[.262866,.951056,.16246],[.5,.809017,.309017],[.238856,.864188,-.442863],[.262866,.951056,-.16246],[.5,.809017,-.309017],[.850651,.525731,0],[.716567,.681718,.147621],[.716567,.681718,-.147621],[.525731,.850651,0],[.425325,.688191,.587785],[.864188,.442863,.238856],[.688191,.587785,.425325],[.809017,.309017,.5],[.681718,.147621,.716567],[.587785,.425325,.688191],[.955423,.295242,0],[1,0,0],[.951056,.16246,.262866],[.850651,-.525731,0],[.955423,-.295242,0],[.864188,-.442863,.238856],[.951056,-.16246,.262866],[.809017,-.309017,.5],[.681718,-.147621,.716567],[.850651,0,.525731],[.864188,.442863,-.238856],[.809017,.309017,-.5],[.951056,.16246,-.262866],[.525731,0,-.850651],[.681718,.147621,-.716567],[.681718,-.147621,-.716567],[.850651,0,-.525731],[.809017,-.309017,-.5],[.864188,-.442863,-.238856],[.951056,-.16246,-.262866],[.147621,.716567,-.681718],[.309017,.5,-.809017],[.425325,.688191,-.587785],[.442863,.238856,-.864188],[.587785,.425325,-.688191],[.688191,.587785,-.425325],[-.147621,.716567,-.681718],[-.309017,.5,-.809017],[0,.525731,-.850651],[-.525731,0,-.850651],[-.442863,.238856,-.864188],[-.295242,0,-.955423],[-.16246,.262866,-.951056],[0,0,-1],[.295242,0,-.955423],[.16246,.262866,-.951056],[-.442863,-.238856,-.864188],[-.309017,-.5,-.809017],[-.16246,-.262866,-.951056],[0,-.850651,-.525731],[-.147621,-.716567,-.681718],[.147621,-.716567,-.681718],[0,-.525731,-.850651],[.309017,-.5,-.809017],[.442863,-.238856,-.864188],[.16246,-.262866,-.951056],[.238856,-.864188,-.442863],[.5,-.809017,-.309017],[.425325,-.688191,-.587785],[.716567,-.681718,-.147621],[.688191,-.587785,-.425325],[.587785,-.425325,-.688191],[0,-.955423,-.295242],[0,-1,0],[.262866,-.951056,-.16246],[0,-.850651,.525731],[0,-.955423,.295242],[.238856,-.864188,.442863],[.262866,-.951056,.16246],[.5,-.809017,.309017],[.716567,-.681718,.147621],[.525731,-.850651,0],[-.238856,-.864188,-.442863],[-.5,-.809017,-.309017],[-.262866,-.951056,-.16246],[-.850651,-.525731,0],[-.716567,-.681718,-.147621],[-.716567,-.681718,.147621],[-.525731,-.850651,0],[-.5,-.809017,.309017],[-.238856,-.864188,.442863],[-.262866,-.951056,.16246],[-.864188,-.442863,.238856],[-.809017,-.309017,.5],[-.688191,-.587785,.425325],[-.681718,-.147621,.716567],[-.442863,-.238856,.864188],[-.587785,-.425325,.688191],[-.309017,-.5,.809017],[-.147621,-.716567,.681718],[-.425325,-.688191,.587785],[-.16246,-.262866,.951056],[.442863,-.238856,.864188],[.16246,-.262866,.951056],[.309017,-.5,.809017],[.147621,-.716567,.681718],[0,-.525731,.850651],[.425325,-.688191,.587785],[.587785,-.425325,.688191],[.688191,-.587785,.425325],[-.955423,.295242,0],[-.951056,.16246,.262866],[-1,0,0],[-.850651,0,.525731],[-.955423,-.295242,0],[-.951056,-.16246,.262866],[-.864188,.442863,-.238856],[-.951056,.16246,-.262866],[-.809017,.309017,-.5],[-.864188,-.442863,-.238856],[-.951056,-.16246,-.262866],[-.809017,-.309017,-.5],[-.681718,.147621,-.716567],[-.681718,-.147621,-.716567],[-.850651,0,-.525731],[-.688191,.587785,-.425325],[-.587785,.425325,-.688191],[-.425325,.688191,-.587785],[-.425325,-.688191,-.587785],[-.587785,-.425325,-.688191],[-.688191,-.587785,-.425325]];class s extends t.Loader{constructor(t){super(t)}load(e,s,r,n){const o=this,i=new t.FileLoader(o.manager);i.setPath(o.path),i.setResponseType("arraybuffer"),i.setRequestHeader(o.requestHeader),i.setWithCredentials(o.withCredentials),i.load(e,(function(t){try{s(o.parse(t))}catch(t){n?n(t):console.error(t),o.manager.itemError(e)}}),r,n)}parse(s){const r=new DataView(s),n={},o=["ident","version","skinwidth","skinheight","framesize","num_skins","num_vertices","num_st","num_tris","num_glcmds","num_frames","offset_skins","offset_st","offset_tris","offset_frames","offset_glcmds","offset_end"];for(let t=0;t<o.length;t++)n[o[t]]=r.getInt32(4*t,!0);if(844121161!==n.ident||8!==n.version)return void console.error("Not a valid MD2 file");if(n.offset_end!==r.byteLength)return void console.error("Corrupted MD2 file");const i=new t.BufferGeometry,a=[];let l=n.offset_st;for(let t=0,e=n.num_st;t<e;t++){const t=r.getInt16(l+0,!0),e=r.getInt16(l+2,!0);a.push(t/n.skinwidth,1-e/n.skinheight),l+=4}l=n.offset_tris;const f=[],u=[];for(let t=0,e=n.num_tris;t<e;t++)f.push(r.getUint16(l+0,!0),r.getUint16(l+2,!0),r.getUint16(l+4,!0)),u.push(r.getUint16(l+6,!0),r.getUint16(l+8,!0),r.getUint16(l+10,!0)),l+=12;const c=new t.Vector3,m=new t.Vector3,h=[],g=[];l=n.offset_frames;for(let t=0,s=n.num_frames;t<s;t++){m.set(r.getFloat32(l+0,!0),r.getFloat32(l+4,!0),r.getFloat32(l+8,!0)),c.set(r.getFloat32(l+12,!0),r.getFloat32(l+16,!0),r.getFloat32(l+20,!0)),l+=24;for(let t=0;t<16;t++){const e=r.getUint8(l+t,!0);if(0===e)break;h[t]=e}const t={name:String.fromCharCode.apply(null,h),vertices:[],normals:[]};l+=16;for(let s=0;s<n.num_vertices;s++){let s=r.getUint8(l++,!0),n=r.getUint8(l++,!0),o=r.getUint8(l++,!0);const i=e[r.getUint8(l++,!0)];s=s*m.x+c.x,n=n*m.y+c.y,o=o*m.z+c.z,t.vertices.push(s,o,n),t.normals.push(i[0],i[2],i[1])}g.push(t)}const p=[],d=[],_=[],v=g[0].vertices,b=g[0].normals;for(let t=0,e=f.length;t<e;t++){let e=3*f[t];const s=v[e],r=v[e+1],n=v[e+2];p.push(s,r,n);const o=b[e],i=b[e+1],l=b[e+2];d.push(o,i,l);e=2*u[t];const c=a[e],m=a[e+1];_.push(c,m)}i.setAttribute("position",new t.Float32BufferAttribute(p,3)),i.setAttribute("normal",new t.Float32BufferAttribute(d,3)),i.setAttribute("uv",new t.Float32BufferAttribute(_,2));const w=[],F=[];for(let e=0,s=g.length;e<s;e++){const s=g[e],r=s.name;if(s.vertices.length>0){const e=[];for(let t=0,r=f.length;t<r;t++){const r=3*f[t],n=s.vertices[r],o=s.vertices[r+1],i=s.vertices[r+2];e.push(n,o,i)}const n=new t.Float32BufferAttribute(e,3);n.name=r,w.push(n)}if(s.normals.length>0){const e=[];for(let t=0,r=f.length;t<r;t++){const r=3*f[t],n=s.normals[r],o=s.normals[r+1],i=s.normals[r+2];e.push(n,o,i)}const n=new t.Float32BufferAttribute(e,3);n.name=r,F.push(n)}}return i.morphAttributes.position=w,i.morphAttributes.normal=F,i.morphTargetsRelative=!1,i.animations=t.AnimationClip.CreateClipsFromMorphTargetSequences(g,10),i}}exports.MD2Loader=s;

"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("three");let t=null;function r(){if(null===t){const e=new ArrayBuffer(2),r=new Uint8Array(e),n=new Uint16Array(e);r[0]=170,r[1]=187,t=43707===n[0]}return t}const n=[null,Float32Array,null,Int8Array,Int16Array,null,Int32Array,Uint8Array,Uint16Array,null,Uint32Array],o={Uint16Array:"getUint16",Uint32Array:"getUint32",Int16Array:"getInt16",Int32Array:"getInt32",Float32Array:"getFloat32",Float64Array:"getFloat64"};function a(e,t,n,a,i){const s=t.BYTES_PER_ELEMENT;let l;if(i===r()||1===s)l=new t(e,n,a);else{const r=new DataView(e,n,a*s),u=o[t.name],c=!i;l=new t(a);for(let e=0;e<a;e++)l[e]=r[u](e*s,c)}return l}class i extends e.Loader{constructor(e){super(e)}load(t,n,o,a){const i=this,s=new e.FileLoader(i.manager);s.setPath(i.path),s.setResponseType("arraybuffer"),s.setRequestHeader(i.requestHeader),s.setWithCredentials(i.withCredentials),t=t.replace(/\*/g,r()?"be":"le"),s.load(t,(function(e){try{n(i.parse(e))}catch(e){a?a(e):console.error(e),i.manager.itemError(t)}}),o,a)}parse(t){const r=function(e){const t=new Uint8Array(e),r=t[0];let o=t[1];const i=!!(o>>7&1),s=o>>6&1,l=1==(o>>5&1),u=31&o;let c=0,d=0;if(l?(c=(t[2]<<16)+(t[3]<<8)+t[4],d=(t[5]<<16)+(t[6]<<8)+t[7]):(c=t[2]+(t[3]<<8)+(t[4]<<16),d=t[5]+(t[6]<<8)+(t[7]<<16)),0===r)throw new Error("PRWM decoder: Invalid format version: 0");if(1!==r)throw new Error("PRWM decoder: Unsupported format version: "+r);if(!i){if(0!==s)throw new Error("PRWM decoder: Indices type must be set to 0 for non-indexed geometries");if(0!==d)throw new Error("PRWM decoder: Number of indices must be set to 0 for non-indexed geometries")}let f=8;const y={};for(let r=0;r<u;r++){let r="";for(;f<t.length;){const e=t[f];if(f++,0===e)break;r+=String.fromCharCode(e)}o=t[f];const i=o>>7&1,s=1+(o>>4&3),u=n[15&o];f++,f=4*Math.ceil(f/4);const d=a(e,u,f,s*c,l);f+=u.BYTES_PER_ELEMENT*s*c,y[r]={type:i,cardinality:s,values:d}}f=4*Math.ceil(f/4);let A=null;return i&&(A=a(e,1===s?Uint32Array:Uint16Array,f,d,l)),{version:r,attributes:y,indices:A}}(t),o=Object.keys(r.attributes),i=new e.BufferGeometry;for(let t=0;t<o.length;t++){const n=r.attributes[o[t]];i.setAttribute(o[t],new e.BufferAttribute(n.values,n.cardinality,n.normalized))}return null!==r.indices&&i.setIndex(new e.BufferAttribute(r.indices,1)),i}static isBigEndianPlatform(){return r()}}exports.PRWMLoader=i;

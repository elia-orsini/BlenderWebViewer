"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("three"),t=require("./CCDIKSolver.cjs.js"),i=require("./MMDPhysics.cjs.js");require("@babel/runtime/helpers/defineProperty");const s=(()=>{function s(t){t=t||{},this.meshes=[],this.camera=null,this.cameraTarget=new e.Object3D,this.cameraTarget.name="target",this.audio=null,this.audioManager=null,this.objects=new WeakMap,this.configuration={sync:void 0===t.sync||t.sync,afterglow:void 0!==t.afterglow?t.afterglow:0,resetPhysicsOnLoop:void 0===t.resetPhysicsOnLoop||t.resetPhysicsOnLoop},this.enabled={animation:!0,ik:!0,grant:!0,physics:!0,cameraAnimation:!0},this.onBeforePhysics=()=>{},this.sharedPhysics=!1,this.masterPhysics=null}function n(e,t){t=t||{},this.audio=e,this.elapsedTime=0,this.currentTime=0,this.delayTime=void 0!==t.delayTime?t.delayTime:0,this.audioDuration=this.audio.buffer.duration,this.duration=this.audioDuration+this.delayTime}function r(e,t){this.mesh=e,this.grants=t||[]}return s.prototype={constructor:s,add:function(e,t){if(t=t||{},e.isSkinnedMesh)this._addMesh(e,t);else if(e.isCamera)this._setupCamera(e,t);else{if("Audio"!==e.type)throw new Error("THREE.MMDAnimationHelper.add: accepts only THREE.SkinnedMesh or THREE.Camera or THREE.Audio instance.");this._setupAudio(e,t)}return this.configuration.sync&&this._syncDuration(),this},remove:function(e){if(e.isSkinnedMesh)this._removeMesh(e);else if(e.isCamera)this._clearCamera(e);else{if("Audio"!==e.type)throw new Error("THREE.MMDAnimationHelper.remove: accepts only THREE.SkinnedMesh or THREE.Camera or THREE.Audio instance.");this._clearAudio(e)}return this.configuration.sync&&this._syncDuration(),this},update:function(e){null!==this.audioManager&&this.audioManager.control(e);for(let t=0;t<this.meshes.length;t++)this._animateMesh(this.meshes[t],e);return this.sharedPhysics&&this._updateSharedPhysics(e),null!==this.camera&&this._animateCamera(this.camera,e),this},pose:function(t,i,s){!1!==(s=s||{}).resetPose&&t.pose();const n=t.skeleton.bones,r=i.bones,o={};for(let e=0,t=n.length;e<t;e++)o[n[e].name]=e;const a=new e.Vector3,h=new e.Quaternion;for(let e=0,t=r.length;e<t;e++){const t=r[e],i=o[t.name];if(void 0===i)continue;const s=n[i];s.position.add(a.fromArray(t.translation)),s.quaternion.multiply(h.fromArray(t.quaternion))}return t.updateMatrixWorld(!0),!1!==s.ik&&this._createCCDIKSolver(t).update(s.saveOriginalBonesBeforeIK),!1!==s.grant&&this.createGrantSolver(t).update(),this},enable:function(e,t){if(void 0===this.enabled[e])throw new Error(`THREE.MMDAnimationHelper.enable: unknown key ${e}`);if(this.enabled[e]=t,"physics"===e)for(let e=0,i=this.meshes.length;e<i;e++)this._optimizeIK(this.meshes[e],t);return this},createGrantSolver:function(e){return new r(e,e.geometry.userData.MMD.grants)},_addMesh:function(e,t){if(this.meshes.indexOf(e)>=0)throw new Error(`THREE.MMDAnimationHelper._addMesh: SkinnedMesh '${e.name}' has already been added.`);return this.meshes.push(e),this.objects.set(e,{looped:!1}),this._setupMeshAnimation(e,t.animation),!1!==t.physics&&this._setupMeshPhysics(e,t),this},_setupCamera:function(e,t){if(this.camera===e)throw new Error(`THREE.MMDAnimationHelper._setupCamera: Camera '${e.name}' has already been set.`);return this.camera&&this.clearCamera(this.camera),this.camera=e,e.add(this.cameraTarget),this.objects.set(e,{}),void 0!==t.animation&&this._setupCameraAnimation(e,t.animation),this},_setupAudio:function(e,t){if(this.audio===e)throw new Error(`THREE.MMDAnimationHelper._setupAudio: Audio '${e.name}' has already been set.`);return this.audio&&this.clearAudio(this.audio),this.audio=e,this.audioManager=new n(e,t),this.objects.set(this.audioManager,{duration:this.audioManager.duration}),this},_removeMesh:function(e){let t=!1,i=0;for(let s=0,n=this.meshes.length;s<n;s++)this.meshes[s]!==e?this.meshes[i++]=this.meshes[s]:(this.objects.delete(e),t=!0);if(!t)throw new Error(`THREE.MMDAnimationHelper._removeMesh: SkinnedMesh '${e.name}' has not been added yet.`);return this.meshes.length=i,this},_clearCamera:function(e){if(e!==this.camera)throw new Error(`THREE.MMDAnimationHelper._clearCamera: Camera '${e.name}' has not been set yet.`);return this.camera.remove(this.cameraTarget),this.objects.delete(this.camera),this.camera=null,this},_clearAudio:function(e){if(e!==this.audio)throw new Error(`THREE.MMDAnimationHelper._clearAudio: Audio '${e.name}' has not been set yet.`);return this.objects.delete(this.audioManager),this.audio=null,this.audioManager=null,this},_setupMeshAnimation:function(t,i){const s=this.objects.get(t);if(void 0!==i){const n=Array.isArray(i)?i:[i];s.mixer=new e.AnimationMixer(t);for(let e=0,t=n.length;e<t;e++)s.mixer.clipAction(n[e]).play();s.mixer.addEventListener("loop",(e=>{const t=e.action._clip.tracks;t.length>0&&".bones"!==t[0].name.slice(0,6)||(s.looped=!0)}))}return s.ikSolver=this._createCCDIKSolver(t),s.grantSolver=this.createGrantSolver(t),this},_setupCameraAnimation:function(t,i){const s=Array.isArray(i)?i:[i],n=this.objects.get(t);n.mixer=new e.AnimationMixer(t);for(let e=0,t=s.length;e<t;e++)n.mixer.clipAction(s[e]).play()},_setupMeshPhysics:function(e,t){const i=this.objects.get(e);if(void 0===t.world&&this.sharedPhysics){const e=this._getMasterPhysics();null!==e&&(world=e.world)}i.physics=this._createMMDPhysics(e,t),i.mixer&&!1!==t.animationWarmup&&(this._animateMesh(e,0),i.physics.reset()),i.physics.warmup(void 0!==t.warmup?t.warmup:60),this._optimizeIK(e,!0)},_animateMesh:function(e,t){const i=this.objects.get(e),s=i.mixer,n=i.ikSolver,r=i.grantSolver,o=i.physics,a=i.looped;s&&this.enabled.animation&&(this._restoreBones(e),s.update(t),this._saveBones(e),n&&this.enabled.ik&&(e.updateMatrixWorld(!0),n.update()),r&&this.enabled.grant&&r.update()),!0===a&&this.enabled.physics&&(o&&this.configuration.resetPhysicsOnLoop&&o.reset(),i.looped=!1),o&&this.enabled.physics&&!this.sharedPhysics&&(this.onBeforePhysics(e),o.update(t))},_animateCamera:function(e,t){const i=this.objects.get(e).mixer;i&&this.enabled.cameraAnimation&&(i.update(t),e.updateProjectionMatrix(),e.up.set(0,1,0),e.up.applyQuaternion(e.quaternion),e.lookAt(this.cameraTarget.position))},_optimizeIK:function(e,t){const i=e.geometry.userData.MMD.iks,s=e.geometry.userData.MMD.bones;for(let e=0,n=i.length;e<n;e++){const n=i[e].links;for(let e=0,i=n.length;e<i;e++){const i=n[e];i.enabled=!0!==t||!(s[i.index].rigidBodyType>0)}}},_createCCDIKSolver:function(e){if(void 0===t.CCDIKSolver)throw new Error("THREE.MMDAnimationHelper: Import CCDIKSolver.");return new t.CCDIKSolver(e,e.geometry.userData.MMD.iks)},_createMMDPhysics:function(e,t){if(void 0===i.MMDPhysics)throw new Error("THREE.MMDPhysics: Import MMDPhysics.");return new i.MMDPhysics(e,e.geometry.userData.MMD.rigidBodies,e.geometry.userData.MMD.constraints,t)},_syncDuration:function(){let e=0;const t=this.objects,i=this.meshes,s=this.camera,n=this.audioManager;for(let s=0,n=i.length;s<n;s++){if(void 0!==(o=this.objects.get(i[s]).mixer))for(let i=0;i<o._actions.length;i++){var r=o._actions[i]._clip;t.has(r)||t.set(r,{duration:r.duration}),e=Math.max(e,t.get(r).duration)}}if(null!==s&&void 0!==(o=this.objects.get(s).mixer))for(let i=0,s=o._actions.length;i<s;i++){r=o._actions[i]._clip;t.has(r)||t.set(r,{duration:r.duration}),e=Math.max(e,t.get(r).duration)}null!==n&&(e=Math.max(e,t.get(n).duration)),e+=this.configuration.afterglow;for(let t=0,i=this.meshes.length;t<i;t++){var o;if(void 0!==(o=this.objects.get(this.meshes[t]).mixer))for(let t=0,i=o._actions.length;t<i;t++)o._actions[t]._clip.duration=e}if(null!==s&&void 0!==(o=this.objects.get(s).mixer))for(let t=0,i=o._actions.length;t<i;t++)o._actions[t]._clip.duration=e;null!==n&&(n.duration=e)},_updatePropertyMixersBuffer:function(e){const t=this.objects.get(e).mixer,i=t._bindings,s=t._accuIndex;for(let e=0,t=i.length;e<t;e++){const t=i[e],n=t.buffer,r=(s+1)*t.valueSize;t.binding.getValue(n,r)}},_saveBones:function(e){const t=this.objects.get(e),i=e.skeleton.bones;let s=t.backupBones;void 0===s&&(s=new Float32Array(7*i.length),t.backupBones=s);for(let e=0,t=i.length;e<t;e++){const t=i[e];t.position.toArray(s,7*e),t.quaternion.toArray(s,7*e+3)}},_restoreBones:function(e){const t=this.objects.get(e).backupBones;if(void 0===t)return;const i=e.skeleton.bones;for(let e=0,s=i.length;e<s;e++){const s=i[e];s.position.fromArray(t,7*e),s.quaternion.fromArray(t,7*e+3)}},_getMasterPhysics:function(){if(null!==this.masterPhysics)return this.masterPhysics;for(let e=0,t=this.meshes.length;e<t;e++){const t=this.meshes[e].physics;if(null!=t)return this.masterPhysics=t,this.masterPhysics}return null},_updateSharedPhysics:function(e){if(0===this.meshes.length||!this.enabled.physics||!this.sharedPhysics)return;const t=this._getMasterPhysics();if(null!==t){for(let e=0,t=this.meshes.length;e<t;e++){null!=(i=this.meshes[e].physics)&&i.updateRigidBodies()}t.stepSimulation(e);for(let e=0,t=this.meshes.length;e<t;e++){var i;null!=(i=this.meshes[e].physics)&&i.updateBones()}}}},n.prototype={constructor:n,control:function(e){return this.elapsed+=e,this.currentTime+=e,this._shouldStopAudio()&&this.audio.stop(),this._shouldStartAudio()&&this.audio.play(),this},_shouldStartAudio:function(){if(this.audio.isPlaying)return!1;for(;this.currentTime>=this.duration;)this.currentTime-=this.duration;return!(this.currentTime<this.delayTime)&&!(this.currentTime-this.delayTime>this.audioDuration)},_shouldStopAudio:function(){return this.audio.isPlaying&&this.currentTime>=this.duration}},r.prototype={constructor:r,update:(()=>{const t=new e.Quaternion;return function(){const e=this.mesh.skeleton.bones,i=this.grants;for(let s=0,n=i.length;s<n;s++){const n=i[s],r=e[n.index],o=e[n.parentIndex];n.isLocal?(n.affectPosition,n.affectRotation):(n.affectPosition,n.affectRotation&&(t.set(0,0,0,1),t.slerp(o.quaternion,n.ratio),r.quaternion.multiply(t)))}return this}})()},s})();exports.MMDAnimationHelper=s;

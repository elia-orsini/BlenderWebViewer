"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("three"),i=function(i,a){t.Mesh.call(this,i,a),this.animationsMap={},this.animationsList=[];var n=Object.keys(this.morphTargetDictionary).length,e="__default",r=n-1,o=n/1;this.createAnimation(e,0,r,o),this.setAnimationWeight(e,1)};i.prototype=Object.assign(Object.create(t.Mesh.prototype),{constructor:i,createAnimation:function(t,i,a,n){var e={start:i,end:a,length:a-i+1,fps:n,duration:(a-i)/n,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[t]=e,this.animationsList.push(e)},autoCreateAnimations:function(t){var i,a=/([a-z]+)_?(\d+)/i,n={},e=0;for(let t in this.morphTargetDictionary){var r=t.match(a);if(r&&r.length>1){var o=r[1];n[o]||(n[o]={start:1/0,end:-1/0}),e<(s=n[o]).start&&(s.start=e),e>s.end&&(s.end=e),i||(i=o)}e++}for(let i in n){var s=n[i];this.createAnimation(i,s.start,s.end,t)}this.firstAnimation=i},setAnimationDirectionForward:function(t){var i=this.animationsMap[t];i&&(i.direction=1,i.directionBackwards=!1)},setAnimationDirectionBackward:function(t){var i=this.animationsMap[t];i&&(i.direction=-1,i.directionBackwards=!0)},setAnimationFPS:function(t,i){var a=this.animationsMap[t];a&&(a.fps=i,a.duration=(a.end-a.start)/a.fps)},setAnimationDuration:function(t,i){var a=this.animationsMap[t];a&&(a.duration=i,a.fps=(a.end-a.start)/a.duration)},setAnimationWeight:function(t,i){var a=this.animationsMap[t];a&&(a.weight=i)},setAnimationTime:function(t,i){var a=this.animationsMap[t];a&&(a.time=i)},getAnimationTime:function(t){var i=0,a=this.animationsMap[t];return a&&(i=a.time),i},getAnimationDuration:function(t){var i=-1,a=this.animationsMap[t];return a&&(i=a.duration),i},playAnimation:function(t){var i=this.animationsMap[t];i?(i.time=0,i.active=!0):console.warn("THREE.MorphBlendMesh: animation["+t+"] undefined in .playAnimation()")},stopAnimation:function(t){var i=this.animationsMap[t];i&&(i.active=!1)},update:function(i){for(let s=0,m=this.animationsList.length;s<m;s++){var a=this.animationsList[s];if(a.active){var n=a.duration/a.length;a.time+=a.direction*i,a.mirroredLoop?(a.time>a.duration||a.time<0)&&(a.direction*=-1,a.time>a.duration&&(a.time=a.duration,a.directionBackwards=!0),a.time<0&&(a.time=0,a.directionBackwards=!1)):(a.time=a.time%a.duration,a.time<0&&(a.time+=a.duration));var e=a.start+t.MathUtils.clamp(Math.floor(a.time/n),0,a.length-1),r=a.weight;e!==a.currentFrame&&(this.morphTargetInfluences[a.lastFrame]=0,this.morphTargetInfluences[a.currentFrame]=1*r,this.morphTargetInfluences[e]=0,a.lastFrame=a.currentFrame,a.currentFrame=e);var o=a.time%n/n;a.directionBackwards&&(o=1-o),a.currentFrame!==a.lastFrame?(this.morphTargetInfluences[a.currentFrame]=o*r,this.morphTargetInfluences[a.lastFrame]=(1-o)*r):this.morphTargetInfluences[a.currentFrame]=r}}}}),exports.MorphBlendMesh=i;

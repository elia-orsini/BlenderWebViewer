"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("three");const t=new e.Vector3,r=new e.Vector3,o=new e.Matrix3;class s extends e.LineSegments{constructor(t,r,o){const s=new e.BufferGeometry,i=void 0!==o?o:16711680;super(s,new e.LineBasicMaterial({color:i,toneMapped:!1})),this.object=t,this.size=void 0!==r?r:.1;let a=0;const n=this.object.geometry;if(n&&n.isGeometry)return void console.error("THREE.VertexNormalsHelper no longer supports Geometry. Use BufferGeometry instead.");n&&n.isBufferGeometry&&(a=n.attributes.normal.count);const l=new e.Float32BufferAttribute(2*a*3,3);s.setAttribute("position",l),this.type="VertexNormalsHelper",this.matrixAutoUpdate=!1,this.update()}update(){this.object.updateMatrixWorld(!0),o.getNormalMatrix(this.object.matrixWorld);const e=this.object.matrixWorld,s=this.geometry.attributes.position,i=this.object.geometry;if(i&&i.isGeometry)console.error("THREE.VertexNormalsHelper no longer supports Geometry. Use BufferGeometry instead.");else{if(i&&i.isBufferGeometry){const a=i.attributes.position,n=i.attributes.normal;let l=0;for(let i=0,p=a.count;i<p;i++)t.set(a.getX(i),a.getY(i),a.getZ(i)).applyMatrix4(e),r.set(n.getX(i),n.getY(i),n.getZ(i)),r.applyMatrix3(o).normalize().multiplyScalar(this.size).add(t),s.setXYZ(l,t.x,t.y,t.z),l+=1,s.setXYZ(l,r.x,r.y,r.z),l+=1}s.needsUpdate=!0}}}exports.VertexNormalsHelper=s;

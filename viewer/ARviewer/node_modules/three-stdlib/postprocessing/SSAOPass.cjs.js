"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("three"),r=require("./Pass.cjs.js"),t=require("../math/SimplexNoise.cjs.js"),a=require("../shaders/SSAOShader.cjs.js"),i=require("../shaders/CopyShader.cjs.js");require("@babel/runtime/helpers/defineProperty");class s extends r.Pass{constructor(t,s,n,l){super(),this.width=void 0!==n?n:512,this.height=void 0!==l?l:512,this.clear=!0,this.camera=s,this.scene=t,this.kernelRadius=8,this.kernelSize=32,this.kernel=[],this.noiseTexture=null,this.output=0,this.minDistance=.005,this.maxDistance=.1,this._visibilityCache=new Map,this.generateSampleKernel(),this.generateRandomKernelRotations();const o=new e.DepthTexture;o.format=e.DepthStencilFormat,o.type=e.UnsignedInt248Type,this.beautyRenderTarget=new e.WebGLRenderTarget(this.width,this.height),this.normalRenderTarget=new e.WebGLRenderTarget(this.width,this.height,{minFilter:e.NearestFilter,magFilter:e.NearestFilter,depthTexture:o}),this.ssaoRenderTarget=new e.WebGLRenderTarget(this.width,this.height),this.blurRenderTarget=this.ssaoRenderTarget.clone(),void 0===a.SSAOShader&&console.error("THREE.SSAOPass: The pass relies on SSAOShader."),this.ssaoMaterial=new e.ShaderMaterial({defines:Object.assign({},a.SSAOShader.defines),uniforms:e.UniformsUtils.clone(a.SSAOShader.uniforms),vertexShader:a.SSAOShader.vertexShader,fragmentShader:a.SSAOShader.fragmentShader,blending:e.NoBlending}),this.ssaoMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.ssaoMaterial.uniforms.tNormal.value=this.normalRenderTarget.texture,this.ssaoMaterial.uniforms.tDepth.value=this.normalRenderTarget.depthTexture,this.ssaoMaterial.uniforms.tNoise.value=this.noiseTexture,this.ssaoMaterial.uniforms.kernel.value=this.kernel,this.ssaoMaterial.uniforms.cameraNear.value=this.camera.near,this.ssaoMaterial.uniforms.cameraFar.value=this.camera.far,this.ssaoMaterial.uniforms.resolution.value.set(this.width,this.height),this.ssaoMaterial.uniforms.cameraProjectionMatrix.value.copy(this.camera.projectionMatrix),this.ssaoMaterial.uniforms.cameraInverseProjectionMatrix.value.copy(this.camera.projectionMatrixInverse),this.normalMaterial=new e.MeshNormalMaterial,this.normalMaterial.blending=e.NoBlending,this.blurMaterial=new e.ShaderMaterial({defines:Object.assign({},a.SSAOBlurShader.defines),uniforms:e.UniformsUtils.clone(a.SSAOBlurShader.uniforms),vertexShader:a.SSAOBlurShader.vertexShader,fragmentShader:a.SSAOBlurShader.fragmentShader}),this.blurMaterial.uniforms.tDiffuse.value=this.ssaoRenderTarget.texture,this.blurMaterial.uniforms.resolution.value.set(this.width,this.height),this.depthRenderMaterial=new e.ShaderMaterial({defines:Object.assign({},a.SSAODepthShader.defines),uniforms:e.UniformsUtils.clone(a.SSAODepthShader.uniforms),vertexShader:a.SSAODepthShader.vertexShader,fragmentShader:a.SSAODepthShader.fragmentShader,blending:e.NoBlending}),this.depthRenderMaterial.uniforms.tDepth.value=this.normalRenderTarget.depthTexture,this.depthRenderMaterial.uniforms.cameraNear.value=this.camera.near,this.depthRenderMaterial.uniforms.cameraFar.value=this.camera.far,this.copyMaterial=new e.ShaderMaterial({uniforms:e.UniformsUtils.clone(i.CopyShader.uniforms),vertexShader:i.CopyShader.vertexShader,fragmentShader:i.CopyShader.fragmentShader,transparent:!0,depthTest:!1,depthWrite:!1,blendSrc:e.DstColorFactor,blendDst:e.ZeroFactor,blendEquation:e.AddEquation,blendSrcAlpha:e.DstAlphaFactor,blendDstAlpha:e.ZeroFactor,blendEquationAlpha:e.AddEquation}),this.fsQuad=new r.FullScreenQuad(null),this.originalClearColor=new e.Color}dispose(){this.beautyRenderTarget.dispose(),this.normalRenderTarget.dispose(),this.ssaoRenderTarget.dispose(),this.blurRenderTarget.dispose(),this.normalMaterial.dispose(),this.blurMaterial.dispose(),this.copyMaterial.dispose(),this.depthRenderMaterial.dispose(),this.fsQuad.dispose()}render(r,t){switch(!1===r.capabilities.isWebGL2&&(this.noiseTexture.format=e.LuminanceFormat),r.setRenderTarget(this.beautyRenderTarget),r.clear(),r.render(this.scene,this.camera),this.overrideVisibility(),this.renderOverride(r,this.normalMaterial,this.normalRenderTarget,7829503,1),this.restoreVisibility(),this.ssaoMaterial.uniforms.kernelRadius.value=this.kernelRadius,this.ssaoMaterial.uniforms.minDistance.value=this.minDistance,this.ssaoMaterial.uniforms.maxDistance.value=this.maxDistance,this.renderPass(r,this.ssaoMaterial,this.ssaoRenderTarget),this.renderPass(r,this.blurMaterial,this.blurRenderTarget),this.output){case s.OUTPUT.SSAO:this.copyMaterial.uniforms.tDiffuse.value=this.ssaoRenderTarget.texture,this.copyMaterial.blending=e.NoBlending,this.renderPass(r,this.copyMaterial,this.renderToScreen?null:t);break;case s.OUTPUT.Blur:this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget.texture,this.copyMaterial.blending=e.NoBlending,this.renderPass(r,this.copyMaterial,this.renderToScreen?null:t);break;case s.OUTPUT.Beauty:this.copyMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.copyMaterial.blending=e.NoBlending,this.renderPass(r,this.copyMaterial,this.renderToScreen?null:t);break;case s.OUTPUT.Depth:this.renderPass(r,this.depthRenderMaterial,this.renderToScreen?null:t);break;case s.OUTPUT.Normal:this.copyMaterial.uniforms.tDiffuse.value=this.normalRenderTarget.texture,this.copyMaterial.blending=e.NoBlending,this.renderPass(r,this.copyMaterial,this.renderToScreen?null:t);break;case s.OUTPUT.Default:this.copyMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.copyMaterial.blending=e.NoBlending,this.renderPass(r,this.copyMaterial,this.renderToScreen?null:t),this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget.texture,this.copyMaterial.blending=e.CustomBlending,this.renderPass(r,this.copyMaterial,this.renderToScreen?null:t);break;default:console.warn("THREE.SSAOPass: Unknown output type.")}}renderPass(e,r,t,a,i){e.getClearColor(this.originalClearColor);const s=e.getClearAlpha(),n=e.autoClear;e.setRenderTarget(t),e.autoClear=!1,null!=a&&(e.setClearColor(a),e.setClearAlpha(i||0),e.clear()),this.fsQuad.material=r,this.fsQuad.render(e),e.autoClear=n,e.setClearColor(this.originalClearColor),e.setClearAlpha(s)}renderOverride(e,r,t,a,i){e.getClearColor(this.originalClearColor);const s=e.getClearAlpha(),n=e.autoClear;e.setRenderTarget(t),e.autoClear=!1,a=r.clearColor||a,i=r.clearAlpha||i,null!=a&&(e.setClearColor(a),e.setClearAlpha(i||0),e.clear()),this.scene.overrideMaterial=r,e.render(this.scene,this.camera),this.scene.overrideMaterial=null,e.autoClear=n,e.setClearColor(this.originalClearColor),e.setClearAlpha(s)}setSize(e,r){this.width=e,this.height=r,this.beautyRenderTarget.setSize(e,r),this.ssaoRenderTarget.setSize(e,r),this.normalRenderTarget.setSize(e,r),this.blurRenderTarget.setSize(e,r),this.ssaoMaterial.uniforms.resolution.value.set(e,r),this.ssaoMaterial.uniforms.cameraProjectionMatrix.value.copy(this.camera.projectionMatrix),this.ssaoMaterial.uniforms.cameraInverseProjectionMatrix.value.copy(this.camera.projectionMatrixInverse),this.blurMaterial.uniforms.resolution.value.set(e,r)}generateSampleKernel(){const r=this.kernelSize,t=this.kernel;for(let a=0;a<r;a++){const i=new e.Vector3;i.x=2*Math.random()-1,i.y=2*Math.random()-1,i.z=Math.random(),i.normalize();let s=a/r;s=e.MathUtils.lerp(.1,1,s*s),i.multiplyScalar(s),t.push(i)}}generateRandomKernelRotations(){void 0===t.SimplexNoise&&console.error("THREE.SSAOPass: The pass relies on SimplexNoise.");const r=new t.SimplexNoise,a=new Float32Array(16);for(let e=0;e<16;e++){const t=2*Math.random()-1,i=2*Math.random()-1,s=0;a[e]=r.noise3d(t,i,s)}this.noiseTexture=new e.DataTexture(a,4,4,e.RedFormat,e.FloatType),this.noiseTexture.wrapS=e.RepeatWrapping,this.noiseTexture.wrapT=e.RepeatWrapping,this.noiseTexture.needsUpdate=!0}overrideVisibility(){const e=this.scene,r=this._visibilityCache;e.traverse((function(e){r.set(e,e.visible),(e.isPoints||e.isLine)&&(e.visible=!1)}))}restoreVisibility(){const e=this.scene,r=this._visibilityCache;e.traverse((function(e){const t=r.get(e);e.visible=t})),r.clear()}}s.OUTPUT={Default:0,SSAO:1,Blur:2,Beauty:3,Depth:4,Normal:5},exports.SSAOPass=s;

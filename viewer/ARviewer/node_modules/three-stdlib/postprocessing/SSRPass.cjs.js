"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("three"),t=require("./Pass.cjs.js"),r=require("../shaders/SSRShader.cjs.js"),i=require("../shaders/CopyShader.cjs.js");require("@babel/runtime/helpers/defineProperty");var s=function({renderer:s,scene:a,camera:n,width:l,height:h,selects:o,encoding:d,isPerspectiveCamera:u=!0,isBouncing:c=!1,morphTargets:f=!1,groundReflector:g}){this.width=void 0!==l?l:512,this.height=void 0!==h?h:512,this.clear=!0,this.renderer=s,this.scene=a,this.camera=n,this.groundReflector=g,this.opacity=r.SSRShader.uniforms.opacity.value,this.output=0,this.maxDistance=r.SSRShader.uniforms.maxDistance.value,this.surfDist=r.SSRShader.uniforms.surfDist.value,this.encoding=d,this.tempColor=new e.Color,this._selects=o,this.isSelective=Array.isArray(this._selects),Object.defineProperty(this,"selects",{get(){return this._selects},set(e){this._selects!==e&&(this._selects=e,Array.isArray(e)?(this.isSelective=!0,this.ssrMaterial.defines.isSelective=!0,this.ssrMaterial.needsUpdate=!0):(this.isSelective=!1,this.ssrMaterial.defines.isSelective=!1,this.ssrMaterial.needsUpdate=!0))}}),this._isBouncing=c,Object.defineProperty(this,"isBouncing",{get(){return this._isBouncing},set(e){this._isBouncing!==e&&(this._isBouncing=e,this.ssrMaterial.uniforms.tDiffuse.value=e?this.prevRenderTarget.texture:this.beautyRenderTarget.texture)}}),this.isBlur=!0,this._isDistanceAttenuation=r.SSRShader.defines.isDistanceAttenuation,Object.defineProperty(this,"isDistanceAttenuation",{get(){return this._isDistanceAttenuation},set(e){this._isDistanceAttenuation!==e&&(this._isDistanceAttenuation=e,this.ssrMaterial.defines.isDistanceAttenuation=e,this.ssrMaterial.needsUpdate=!0)}}),this._isFresnel=r.SSRShader.defines.isFresnel,Object.defineProperty(this,"isFresnel",{get(){return this._isFresnel},set(e){this._isFresnel!==e&&(this._isFresnel=e,this.ssrMaterial.defines.isFresnel=e,this.ssrMaterial.needsUpdate=!0)}}),this._isInfiniteThick=r.SSRShader.defines.isInfiniteThick,Object.defineProperty(this,"isInfiniteThick",{get(){return this._isInfiniteThick},set(e){this._isInfiniteThick!==e&&(this._isInfiniteThick=e,this.ssrMaterial.defines.isInfiniteThick=e,this.ssrMaterial.needsUpdate=!0)}}),this.thickTolerance=r.SSRShader.uniforms.thickTolerance.value;var m=new e.DepthTexture;m.type=e.UnsignedShortType,m.minFilter=e.NearestFilter,m.maxFilter=e.NearestFilter,this.beautyRenderTarget=new e.WebGLRenderTarget(this.width,this.height,{minFilter:e.LinearFilter,magFilter:e.LinearFilter,format:e.RGBAFormat,depthTexture:m,depthBuffer:!0}),this.prevRenderTarget=new e.WebGLRenderTarget(this.width,this.height,{minFilter:e.LinearFilter,magFilter:e.LinearFilter,format:e.RGBAFormat}),this.normalRenderTarget=new e.WebGLRenderTarget(this.width,this.height,{minFilter:e.NearestFilter,magFilter:e.NearestFilter,format:e.RGBAFormat,type:e.HalfFloatType}),this.metalnessRenderTarget=new e.WebGLRenderTarget(this.width,this.height,{minFilter:e.NearestFilter,magFilter:e.NearestFilter,format:e.RGBAFormat}),this.ssrRenderTarget=new e.WebGLRenderTarget(this.width,this.height,{minFilter:e.LinearFilter,magFilter:e.LinearFilter,format:e.RGBAFormat}),this.blurRenderTarget=this.ssrRenderTarget.clone(),this.blurRenderTarget2=this.ssrRenderTarget.clone(),void 0===r.SSRShader&&console.error("THREE.SSRPass: The pass relies on SSRShader."),this.ssrMaterial=new e.ShaderMaterial({defines:Object.assign({MAX_STEP:Math.sqrt(window.innerWidth*window.innerWidth+window.innerHeight*window.innerHeight)},r.SSRShader.defines),uniforms:e.UniformsUtils.clone(r.SSRShader.uniforms),vertexShader:r.SSRShader.vertexShader,fragmentShader:r.SSRShader.fragmentShader,blending:e.NoBlending}),u||(this.ssrMaterial.defines.isPerspectiveCamera=u,this.ssrMaterial.needsUpdate=!0),this.ssrMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.ssrMaterial.uniforms.tNormal.value=this.normalRenderTarget.texture,this.ssrMaterial.defines.isSelective=this.isSelective,this.ssrMaterial.needsUpdate=!0,this.ssrMaterial.uniforms.tMetalness.value=this.metalnessRenderTarget.texture,this.ssrMaterial.uniforms.tDepth.value=this.beautyRenderTarget.depthTexture,this.ssrMaterial.uniforms.cameraNear.value=this.camera.near,this.ssrMaterial.uniforms.cameraFar.value=this.camera.far,this.ssrMaterial.uniforms.surfDist.value=this.surfDist,this.ssrMaterial.uniforms.resolution.value.set(this.width,this.height),this.ssrMaterial.uniforms.cameraProjectionMatrix.value.copy(this.camera.projectionMatrix),this.ssrMaterial.uniforms.cameraInverseProjectionMatrix.value.copy(this.camera.projectionMatrixInverse),this.normalMaterial=new e.MeshNormalMaterial({morphTargets:f}),this.normalMaterial.blending=e.NoBlending,this.metalnessOnMaterial=new e.MeshBasicMaterial({color:"white"}),this.metalnessOffMaterial=new e.MeshBasicMaterial({color:"black"}),this.blurMaterial=new e.ShaderMaterial({defines:Object.assign({},r.SSRBlurShader.defines),uniforms:e.UniformsUtils.clone(r.SSRBlurShader.uniforms),vertexShader:r.SSRBlurShader.vertexShader,fragmentShader:r.SSRBlurShader.fragmentShader}),this.blurMaterial.uniforms.tDiffuse.value=this.ssrRenderTarget.texture,this.blurMaterial.uniforms.resolution.value.set(this.width,this.height),this.blurMaterial2=new e.ShaderMaterial({defines:Object.assign({},r.SSRBlurShader.defines),uniforms:e.UniformsUtils.clone(r.SSRBlurShader.uniforms),vertexShader:r.SSRBlurShader.vertexShader,fragmentShader:r.SSRBlurShader.fragmentShader}),this.blurMaterial2.uniforms.tDiffuse.value=this.blurRenderTarget.texture,this.blurMaterial2.uniforms.resolution.value.set(this.width,this.height),this.depthRenderMaterial=new e.ShaderMaterial({defines:Object.assign({},r.SSRDepthShader.defines),uniforms:e.UniformsUtils.clone(r.SSRDepthShader.uniforms),vertexShader:r.SSRDepthShader.vertexShader,fragmentShader:r.SSRDepthShader.fragmentShader,blending:e.NoBlending}),this.depthRenderMaterial.uniforms.tDepth.value=this.beautyRenderTarget.depthTexture,this.depthRenderMaterial.uniforms.cameraNear.value=this.camera.near,this.depthRenderMaterial.uniforms.cameraFar.value=this.camera.far,this.copyMaterial=new e.ShaderMaterial({uniforms:e.UniformsUtils.clone(i.CopyShader.uniforms),vertexShader:i.CopyShader.vertexShader,fragmentShader:i.CopyShader.fragmentShader,transparent:!0,depthTest:!1,depthWrite:!1,blendSrc:e.SrcAlphaFactor,blendDst:e.OneMinusSrcAlphaFactor,blendEquation:e.AddEquation,blendSrcAlpha:e.SrcAlphaFactor,blendDstAlpha:e.OneMinusSrcAlphaFactor,blendEquationAlpha:e.AddEquation}),this.fsQuad=new t.FullScreenQuad(null),this.originalClearColor=new e.Color};s.prototype=Object.assign(Object.create(t.Pass.prototype),{constructor:s,dispose:function(){this.beautyRenderTarget.dispose(),this.prevRenderTarget.dispose(),this.normalRenderTarget.dispose(),this.metalnessRenderTarget.dispose(),this.ssrRenderTarget.dispose(),this.blurRenderTarget.dispose(),this.blurRenderTarget2.dispose(),this.normalMaterial.dispose(),this.metalnessOnMaterial.dispose(),this.metalnessOffMaterial.dispose(),this.blurMaterial.dispose(),this.blurMaterial2.dispose(),this.copyMaterial.dispose(),this.depthRenderMaterial.dispose(),this.fsQuad.dispose()},render:function(t,r){switch(this.encoding&&(this.beautyRenderTarget.texture.encoding=this.encoding),t.setRenderTarget(this.beautyRenderTarget),t.clear(),this.groundReflector&&(this.groundReflector.doRender(this.renderer,this.scene,this.camera),this.groundReflector.visible=!0),t.render(this.scene,this.camera),this.groundReflector&&(this.groundReflector.visible=!1),this.renderOverride(t,this.normalMaterial,this.normalRenderTarget,0,0),this.isSelective&&this.renderMetalness(t,this.metalnessOnMaterial,this.metalnessRenderTarget,0,0),this.ssrMaterial.uniforms.opacity.value=this.opacity,this.ssrMaterial.uniforms.maxDistance.value=this.maxDistance,this.ssrMaterial.uniforms.surfDist.value=this.surfDist,this.ssrMaterial.uniforms.thickTolerance.value=this.thickTolerance,this.renderPass(t,this.ssrMaterial,this.ssrRenderTarget),this.isBlur&&(this.renderPass(t,this.blurMaterial,this.blurRenderTarget),this.renderPass(t,this.blurMaterial2,this.blurRenderTarget2)),this.output){case s.OUTPUT.Default:this.isBouncing?(this.copyMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.copyMaterial.blending=e.NoBlending,this.renderPass(t,this.copyMaterial,this.prevRenderTarget),this.isBlur?this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget2.texture:this.copyMaterial.uniforms.tDiffuse.value=this.ssrRenderTarget.texture,this.copyMaterial.blending=e.NormalBlending,this.renderPass(t,this.copyMaterial,this.prevRenderTarget),this.copyMaterial.uniforms.tDiffuse.value=this.prevRenderTarget.texture,this.copyMaterial.blending=e.NoBlending,this.renderPass(t,this.copyMaterial,this.renderToScreen?null:r)):(this.copyMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.copyMaterial.blending=e.NoBlending,this.renderPass(t,this.copyMaterial,this.renderToScreen?null:r),this.isBlur?this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget2.texture:this.copyMaterial.uniforms.tDiffuse.value=this.ssrRenderTarget.texture,this.copyMaterial.blending=e.NormalBlending,this.renderPass(t,this.copyMaterial,this.renderToScreen?null:r));break;case s.OUTPUT.SSR:this.isBlur?this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget2.texture:this.copyMaterial.uniforms.tDiffuse.value=this.ssrRenderTarget.texture,this.copyMaterial.blending=e.NoBlending,this.renderPass(t,this.copyMaterial,this.renderToScreen?null:r),this.isBouncing&&(this.isBlur?this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget2.texture:this.copyMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.copyMaterial.blending=e.NoBlending,this.renderPass(t,this.copyMaterial,this.prevRenderTarget),this.copyMaterial.uniforms.tDiffuse.value=this.ssrRenderTarget.texture,this.copyMaterial.blending=e.NormalBlending,this.renderPass(t,this.copyMaterial,this.prevRenderTarget));break;case s.OUTPUT.Beauty:this.copyMaterial.uniforms.tDiffuse.value=this.beautyRenderTarget.texture,this.copyMaterial.blending=e.NoBlending,this.renderPass(t,this.copyMaterial,this.renderToScreen?null:r);break;case s.OUTPUT.Depth:this.renderPass(t,this.depthRenderMaterial,this.renderToScreen?null:r);break;case s.OUTPUT.Normal:this.copyMaterial.uniforms.tDiffuse.value=this.normalRenderTarget.texture,this.copyMaterial.blending=e.NoBlending,this.renderPass(t,this.copyMaterial,this.renderToScreen?null:r);break;case s.OUTPUT.Metalness:this.copyMaterial.uniforms.tDiffuse.value=this.metalnessRenderTarget.texture,this.copyMaterial.blending=e.NoBlending,this.renderPass(t,this.copyMaterial,this.renderToScreen?null:r);break;default:console.warn("THREE.SSRPass: Unknown output type.")}},renderPass:function(e,t,r,i,s){this.originalClearColor.copy(e.getClearColor(this.tempColor));var a=e.getClearAlpha(this.tempColor),n=e.autoClear;e.setRenderTarget(r),e.autoClear=!1,null!=i&&(e.setClearColor(i),e.setClearAlpha(s||0),e.clear()),this.fsQuad.material=t,this.fsQuad.render(e),e.autoClear=n,e.setClearColor(this.originalClearColor),e.setClearAlpha(a)},renderOverride:function(e,t,r,i,s){this.originalClearColor.copy(e.getClearColor(this.tempColor));var a=e.getClearAlpha(this.tempColor),n=e.autoClear;e.setRenderTarget(r),e.autoClear=!1,i=t.clearColor||i,s=t.clearAlpha||s,null!=i&&(e.setClearColor(i),e.setClearAlpha(s||0),e.clear()),this.scene.overrideMaterial=t,e.render(this.scene,this.camera),this.scene.overrideMaterial=null,e.autoClear=n,e.setClearColor(this.originalClearColor),e.setClearAlpha(a)},renderMetalness:function(e,t,r,i,s){this.originalClearColor.copy(e.getClearColor(this.tempColor));var a=e.getClearAlpha(this.tempColor),n=e.autoClear;e.setRenderTarget(r),e.autoClear=!1,i=t.clearColor||i,s=t.clearAlpha||s,null!=i&&(e.setClearColor(i),e.setClearAlpha(s||0),e.clear()),this.scene.traverseVisible((e=>{e._SSRPassMaterialBack=e.material,this._selects.includes(e)?e.material=this.metalnessOnMaterial:e.material=this.metalnessOffMaterial})),e.render(this.scene,this.camera),this.scene.traverseVisible((e=>{e.material=e._SSRPassMaterialBack})),e.autoClear=n,e.setClearColor(this.originalClearColor),e.setClearAlpha(a)},setSize:function(e,t){this.width=e,this.height=t,this.ssrMaterial.defines.MAX_STEP=Math.sqrt(e*e+t*t),this.ssrMaterial.needsUpdate=!0,this.beautyRenderTarget.setSize(e,t),this.prevRenderTarget.setSize(e,t),this.ssrRenderTarget.setSize(e,t),this.normalRenderTarget.setSize(e,t),this.metalnessRenderTarget.setSize(e,t),this.blurRenderTarget.setSize(e,t),this.blurRenderTarget2.setSize(e,t),this.ssrMaterial.uniforms.resolution.value.set(e,t),this.ssrMaterial.uniforms.cameraProjectionMatrix.value.copy(this.camera.projectionMatrix),this.ssrMaterial.uniforms.cameraInverseProjectionMatrix.value.copy(this.camera.projectionMatrixInverse),this.blurMaterial.uniforms.resolution.value.set(e,t),this.blurMaterial2.uniforms.resolution.value.set(e,t)}}),s.OUTPUT={Default:0,SSR:1,Beauty:3,Depth:4,Normal:5,Metalness:7},exports.SSRPass=s;

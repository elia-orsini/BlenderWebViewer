"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("@babel/runtime/helpers/defineProperty"),e=require("./Pass.cjs.js"),i=require("three"),a=require("../shaders/DigitalGlitch.cjs.js");function s(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var r=s(t);class n extends e.Pass{constructor(t=64){super(),r.default(this,"material",void 0),r.default(this,"fsQuad",void 0),r.default(this,"goWild",void 0),r.default(this,"curF",void 0),r.default(this,"randX",void 0),r.default(this,"uniforms",void 0),void 0===a.DigitalGlitch&&console.error("THREE.GlitchPass relies on DigitalGlitch");const s=a.DigitalGlitch;this.uniforms=i.UniformsUtils.clone(s.uniforms),this.uniforms.tDisp.value=this.generateHeightmap(t),this.material=new i.ShaderMaterial({uniforms:this.uniforms,vertexShader:s.vertexShader,fragmentShader:s.fragmentShader}),this.fsQuad=new e.FullScreenQuad(this.material),this.goWild=!1,this.curF=0,this.generateTrigger()}render(t,e,a){!1===t.capabilities.isWebGL2&&(this.uniforms.tDisp.value.format=i.LuminanceFormat),this.uniforms.tDiffuse.value=a.texture,this.uniforms.seed.value=Math.random(),this.uniforms.byp.value=0,this.curF%this.randX==0||1==this.goWild?(this.uniforms.amount.value=Math.random()/30,this.uniforms.angle.value=i.MathUtils.randFloat(-Math.PI,Math.PI),this.uniforms.seed_x.value=i.MathUtils.randFloat(-1,1),this.uniforms.seed_y.value=i.MathUtils.randFloat(-1,1),this.uniforms.distortion_x.value=i.MathUtils.randFloat(0,1),this.uniforms.distortion_y.value=i.MathUtils.randFloat(0,1),this.curF=0,this.generateTrigger()):this.curF%this.randX<this.randX/5?(this.uniforms.amount.value=Math.random()/90,this.uniforms.angle.value=i.MathUtils.randFloat(-Math.PI,Math.PI),this.uniforms.distortion_x.value=i.MathUtils.randFloat(0,1),this.uniforms.distortion_y.value=i.MathUtils.randFloat(0,1),this.uniforms.seed_x.value=i.MathUtils.randFloat(-.3,.3),this.uniforms.seed_y.value=i.MathUtils.randFloat(-.3,.3)):0==this.goWild&&(this.uniforms.byp.value=1),this.curF++,this.renderToScreen?(t.setRenderTarget(null),this.fsQuad.render(t)):(t.setRenderTarget(e),this.clear&&t.clear(),this.fsQuad.render(t))}generateTrigger(){this.randX=i.MathUtils.randInt(120,240)}generateHeightmap(t){const e=new Float32Array(t*t),a=t*t;for(let t=0;t<a;t++){const a=i.MathUtils.randFloat(0,1);e[t]=a}const s=new i.DataTexture(e,t,t,i.RedFormat,i.FloatType);return s.needsUpdate=!0,s}}exports.GlitchPass=n;

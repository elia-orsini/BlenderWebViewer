"use strict";module.exports=class{constructor(e,t,i,s,r,u,a,n){this.device=e,this.info=t,this.properties=i,this.textures=s,this.pipelines=r,this.computePipelines=u,this.attributes=a,this.nodes=n,this.uniformsData=new WeakMap,this.updateMap=new WeakMap}get(e){let t=this.uniformsData.get(e);if(void 0===t){const i=this.pipelines.get(e),s=e.material,r=this.nodes.get(s).getBindings(),u=i.getBindGroupLayout(0);t={layout:u,group:this._createBindGroup(r,u),bindings:r},this.uniformsData.set(e,t)}return t}getForCompute(e){let t=this.uniformsData.get(e);if(void 0===t){const i=this.computePipelines.get(e),s=void 0!==e.bindings?e.bindings.slice():[],r=i.getBindGroupLayout(0);t={layout:r,group:this._createBindGroup(s,r),bindings:s},this.uniformsData.set(e,t)}return t}update(e,t){const i=this.textures,s=this.get(e),r=s.bindings,u=this.updateMap,a=this.info.render.frame;let n=!1;for(let s of r){const r=s.isShared,o=u.get(s)===a;if(!r||!o){if(s.isUniformsGroup){const i=s.array,r=s.bufferGPU;s.onBeforeUpdate(e,t);!0===s.update()&&this.device.queue.writeBuffer(r,0,i,0)}else if(s.isStorageBuffer){const e=s.attribute;this.attributes.update(e,!1,s.usage)}else if(s.isSampler){const e=s.texture;i.updateSampler(e);const t=i.getSampler(e);s.samplerGPU!==t&&(s.samplerGPU=t,n=!0)}else if(s.isSampledTexture){const e=s.texture,t=i.updateTexture(e),r=i.getTextureGPU(e);s.textureGPU===r&&!0!==t||(s.textureGPU=r,n=!0)}u.set(s,a)}}!0===n&&(s.group=this._createBindGroup(r,s.layout))}dispose(){this.uniformsData=new WeakMap,this.updateMap=new WeakMap}_createBindGroup(e,t){let i=0;const s=[];for(let t of e){if(t.isUniformsGroup){if(null===t.bufferGPU){const e=t.getByteLength();t.array=new Float32Array(new ArrayBuffer(e)),t.bufferGPU=this.device.createBuffer({size:e,usage:t.usage})}s.push({binding:i,resource:{buffer:t.bufferGPU}})}else if(t.isStorageBuffer){if(null===t.bufferGPU){const e=t.attribute;this.attributes.update(e,!1,t.usage),t.bufferGPU=this.attributes.get(e).buffer}s.push({binding:i,resource:{buffer:t.bufferGPU}})}else t.isSampler?(null===t.samplerGPU&&(t.samplerGPU=this.textures.getDefaultSampler()),s.push({binding:i,resource:t.samplerGPU})):t.isSampledTexture&&(null===t.textureGPU&&(t.isSampledCubeTexture?t.textureGPU=this.textures.getDefaultCubeTexture():t.textureGPU=this.textures.getDefaultTexture()),s.push({binding:i,resource:t.textureGPU.createView({dimension:t.dimension})}));i++}return this.device.createBindGroup({layout:t,entries:s})}};

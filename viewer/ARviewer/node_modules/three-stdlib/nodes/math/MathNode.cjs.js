"use strict";var e=require("@babel/runtime/helpers/defineProperty"),t=require("../core/TempNode.cjs.js"),d=require("../core/ExpressionNode.cjs.js"),u=require("../utils/JoinNode.cjs.js"),r=require("../utils/SplitNode.cjs.js"),l=require("./OperatorNode.cjs.js");function s(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}require("../core/Node.cjs.js"),require("../core/constants.cjs.js"),require("../core/NodeUtils.cjs.js"),require("three"),require("../core/NodeBuilder.cjs.js"),require("../core/NodeUniform.cjs.js"),require("../core/NodeAttribute.cjs.js"),require("../core/NodeVary.cjs.js"),require("../core/NodeVar.cjs.js"),require("../core/NodeCode.cjs.js"),require("../core/NodeKeywords.cjs.js");var i=s(e);class o extends t{constructor(e,t,d=null,u=null){super(),this.method=e,this.aNode=t,this.bNode=d,this.cNode=u}getInputType(e){const t=this.aNode.getNodeType(e),d=this.bNode?this.bNode.getNodeType(e):null,u=this.cNode?this.cNode.getNodeType(e):null,r=e.getTypeLength(t),l=e.getTypeLength(d),s=e.getTypeLength(u);return r>l&&r>s?t:l>s?d:s>r?u:t}getNodeType(e){const t=this.method;return t===o.LENGTH||t===o.DISTANCE||t===o.DOT?"float":t===o.CROSS?"vec3":this.getInputType(e)}generate(e,t){const s=this.method,i=this.getNodeType(e),a=this.getInputType(e),n=this.aNode,f=this.bNode,c=this.cNode,N=!0===e.renderer.isWebGLRenderer;if(!N||s!==o.DFDX&&s!==o.DFDY||"vec3"!==t){if(s===o.TRANSFORM_DIRECTION){let t=n,u=f;e.isMatrix(t.getNodeType(e))?u=new d(`${e.getType("vec4")}( ${u.build(e,"vec3")}, 0.0 )`,"vec4"):t=new d(`${e.getType("vec4")}( ${t.build(e,"vec3")}, 0.0 )`,"vec4");const s=new r(new l("*",t,u),"xyz");return new o(o.NORMALIZE,s).build(e)}if(s===o.SATURATE)return e.format(`clamp( ${n.build(e,a)}, 0.0, 1.0 )`,i,t);if(s===o.NEGATE)return e.format("( -"+n.build(e,a)+" )",i,t);if(s===o.INVERT)return e.format("( 1.0 - "+n.build(e,a)+" )",i,t);{const d=[];return s===o.CROSS?d.push(n.build(e,i),f.build(e,i)):s===o.STEP?d.push(n.build(e,1===e.getTypeLength(n.getNodeType(e))?"float":a),f.build(e,a)):N&&(s===o.MIN||s===o.MAX)||s===o.MOD?d.push(n.build(e,a),f.build(e,1===e.getTypeLength(f.getNodeType(e))?"float":a)):s===o.REFRACT?d.push(n.build(e,a),f.build(e,a),c.build(e,"float")):s===o.MIX?d.push(n.build(e,a),f.build(e,a),c.build(e,1===e.getTypeLength(c.getNodeType(e))?"float":a)):(d.push(n.build(e,a)),null!==c?d.push(f.build(e,a),c.build(e,a)):null!==f&&d.push(f.build(e,a))),e.format(`${e.getMethod(s)}( ${d.join(", ")} )`,i,t)}}return new u([new o(s,new r(n,"x")),new o(s,new r(n,"y")),new o(s,new r(n,"z"))]).build(e)}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}i.default(o,"RAD","radians"),i.default(o,"DEG","degrees"),i.default(o,"EXP","exp"),i.default(o,"EXP2","exp2"),i.default(o,"LOG","log"),i.default(o,"LOG2","log2"),i.default(o,"SQRT","sqrt"),i.default(o,"INV_SQRT","inversesqrt"),i.default(o,"FLOOR","floor"),i.default(o,"CEIL","ceil"),i.default(o,"NORMALIZE","normalize"),i.default(o,"FRACT","fract"),i.default(o,"SIN","sin"),i.default(o,"COS","cos"),i.default(o,"TAN","tan"),i.default(o,"ASIN","asin"),i.default(o,"ACOS","acos"),i.default(o,"ATAN","atan"),i.default(o,"ABS","abs"),i.default(o,"SIGN","sign"),i.default(o,"LENGTH","length"),i.default(o,"NEGATE","negate"),i.default(o,"INVERT","invert"),i.default(o,"DFDX","dFdx"),i.default(o,"DFDY","dFdy"),i.default(o,"SATURATE","saturate"),i.default(o,"ROUND","round"),i.default(o,"MIN","min"),i.default(o,"MAX","max"),i.default(o,"MOD","mod"),i.default(o,"STEP","step"),i.default(o,"REFLECT","reflect"),i.default(o,"DISTANCE","distance"),i.default(o,"DOT","dot"),i.default(o,"CROSS","cross"),i.default(o,"POW","pow"),i.default(o,"TRANSFORM_DIRECTION","transformDirection"),i.default(o,"MIX","mix"),i.default(o,"CLAMP","clamp"),i.default(o,"REFRACT","refract"),i.default(o,"SMOOTHSTEP","smoothstep"),i.default(o,"FACEFORWARD","faceforward"),module.exports=o;

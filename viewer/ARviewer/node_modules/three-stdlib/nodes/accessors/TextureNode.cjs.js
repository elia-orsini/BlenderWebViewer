"use strict";var e=require("../core/UniformNode.cjs.js"),r=require("./UVNode.cjs.js");require("../core/InputNode.cjs.js"),require("../core/Node.cjs.js"),require("../core/constants.cjs.js"),require("../core/NodeUtils.cjs.js"),require("three"),require("../core/AttributeNode.cjs.js"),require("../core/VaryNode.cjs.js");class t extends e{constructor(e,t=new r,s=null){super(e,"vec4"),this.uvNode=t,this.biasNode=s}getUniformHash(){return this.value.uuid}getInputType(){return"texture"}generate(e,r){const t=this.value;if(!t||!0!==t.isTexture)throw new Error("TextureNode: Need a three.js texture.");const s=super.generate(e,"texture");if("sampler"===r)return s+"_sampler";if(e.isReference(r))return s;{const t=e.getDataFromNode(this);let i=t.snippet;if(void 0===i){const r=this.uvNode.build(e,"vec2"),u=this.biasNode;if(null!==u){const t=u.build(e,"float");i=e.getTextureBias(s,r,t)}else i=e.getTexture(s,r);t.snippet=i}return e.format(i,"vec4",r)}}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value]}}t.prototype.isTextureNode=!0,module.exports=t;

"use strict";var e=require("../core/NodeFunction.cjs.js"),t=require("../core/NodeFunctionInput.cjs.js");const o=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,s=/[a-z_0-9]+/gi;module.exports=class extends e{constructor(e){const{type:n,inputs:i,name:r,presicion:c,inputsCode:u,blockCode:d,headerCode:l}=(e=>{const n=(e=e.trim()).indexOf("#pragma main"),i=-1!==n?e.slice(n+"#pragma main".length):e,r=i.match(o);if(null!==r&&5===r.length){const o=r[4],c=[];let u=null;for(;null!==(u=s.exec(o));)c.push(u);const d=[];let l=0;for(;l<c.length;){const e="const"===c[l][0];!0===e&&l++;let o=c[l][0];"in"===o||"out"===o||"inout"===o?l++:o="";const s=c[l++][0];let n=Number.parseInt(c[l][0]);!1===Number.isNaN(n)?l++:n=null;const i=c[l++][0];d.push(new t(s,i,n,o,e))}const h=i.substring(r[0].length),p=void 0!==r[3]?r[3]:"";return{type:r[2],inputs:d,name:p,presicion:void 0!==r[1]?r[1]:"",inputsCode:o,blockCode:h,headerCode:-1!==n?e.slice(0,n):""}}throw new Error("FunctionNode: Function is not a GLSL code.")})(e);super(n,i,r,c),this.inputsCode=u,this.blockCode=d,this.headerCode=l}getCode(e=this.name){const t=this.headerCode,o=this.presicion;let s=`${this.type} ${e} ( ${this.inputsCode.trim()} )`;return""!==o&&(s=`${o} ${s}`),t+s+this.blockCode}};

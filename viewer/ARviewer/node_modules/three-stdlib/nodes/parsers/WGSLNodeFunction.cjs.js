"use strict";var t=require("../core/NodeFunction.cjs.js"),e=require("../core/NodeFunctionInput.cjs.js");const n=/^fn\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*\-\>\s*([a-z_0-9]+)?/i,s=/[a-z_0-9]+/gi;module.exports=class extends t{constructor(t){const{type:o,inputs:i,name:c,inputsCode:u,blockCode:r}=(t=>{const o=(t=t.trim()).match(n);if(null!==o&&4===o.length){const n=o[2],i=[];let c=null;for(;null!==(c=s.exec(n));)i.push(c);const u=[];let r=0;for(;r<i.length;){const t=i[r++][0],n=i[r++][0];r<i.length&&!0===/^[fui]\d{2}$/.test(i[r][0])&&r++,u.push(new e(n,t))}const l=t.substring(o[0].length),d=void 0!==o[1]?o[1]:"";return{type:o[3],inputs:u,name:d,inputsCode:n,blockCode:l}}throw new Error("FunctionNode: Function is not a WGSL code.")})(t);super(o,i,c),this.inputsCode=u,this.blockCode=r}getCode(t=this.name){return`fn ${t} ( ${this.inputsCode.trim()} ) -> ${this.type}`+this.blockCode}};

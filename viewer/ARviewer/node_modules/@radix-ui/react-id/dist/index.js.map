{"mappings":"IAYgCA,EAAMC,oEAAND,KAAMC,mBACpCC,OAAOC,KAAKF,GAAQG,SAAQ,SAASC,GACvB,YAARA,GAA6B,eAARA,GAIzBH,OAAOI,eAAeN,EAAMK,EAAK,CAC/BE,YAAY,EACZC,IAAK,WACH,OAAOP,EAAOI,SAKbL,GCtBT,MAAMS,EAAcC,EAAc,QAAQC,aAAvB,SACnB,IAAIC,EAAQ,gBAEZ,SAAeC,GACb,MAAOC,EAAIC,GAASL,EAAMM,SAA6BP,KAKvD,OAHAQ,GAAgB,KACTJ,GAAiBE,GAAOG,GAAYA,MAAAA,EAAAA,EAAWC,OAAOP,SAC1D,CAACC,IACGA,IAAoBC,EAAM,SAAQA,IAAO,wBAIlD,UAAoBM,SAAEA,IAIpB,OAHAV,EAAMW,WAAU,KACdC,QAAQC,KAAKC,KACZ,iBACIC,EAAAC,cAAAD,EAAAE,SAAA,KAAGP,IAGZ,MAAMI,EAA0B","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./packages/react/id/src/id.tsx"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$reexport(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","import * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n// We `toString()` to prevent bundlers from trying to `import { useId } from 'react';`\nconst useReactId = (React as any)['useId'.toString()] || (() => undefined);\nlet count = 0;\n\nfunction useId(deterministicId?: string): string {\n  const [id, setId] = React.useState<string | undefined>(useReactId());\n  // React versions older than 18 will have client-side ids only.\n  useLayoutEffect(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : '');\n}\n\n// DEPRECATED\nfunction IdProvider({ children }: { children: React.ReactNode }) {\n  React.useEffect(() => {\n    console.warn(ID_PROVIDER_DEPRECATED);\n  }, []);\n  return <>{children}</>;\n}\n\nconst ID_PROVIDER_DEPRECATED = `Warning: The \\`IdProvider\\` has been deprecated. For details, see https://radix-ui.com/docs/primitives/utilities/id-provider`;\n\nexport { IdProvider, useId };\n"],"names":["dest","source","Object","keys","forEach","key","defineProperty","enumerable","get","useReactId","React","toString","count","deterministicId","id","setId","useState","useLayoutEffect","reactId","String","children","useEffect","console","warn","ID_PROVIDER_DEPRECATED","_react","createElement","Fragment"],"version":3,"file":"index.js.map"}
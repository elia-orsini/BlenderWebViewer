{"mappings":"4FAIA,MAAMA,EAAcC,EAAc,QAAQC,aAAvB,SACnB,IAAIC,EAAQ,SAEZ,SAASC,MAAMC,GACb,MAAOC,EAAIC,GAASN,EAAMO,SAA6BR,KAKvD,OAHAS,GAAgB,KACTJ,GAAiBE,GAAOG,GAAYA,MAAAA,EAAAA,EAAWC,OAAOR,SAC1D,CAACE,IACGA,IAAoBC,EAAM,SAAQA,IAAO,WAIlD,SAASM,YAAWC,SAAEA,IAIpB,OAHAZ,EAAMa,WAAU,KACdC,QAAQC,KAAKC,KACZ,iBACIC,EAAAC,cAAAD,EAAAE,SAAA,KAAGP,GAGZ,MAAMI,EAA0B","sources":["./packages/react/id/src/id.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n// We `toString()` to prevent bundlers from trying to `import { useId } from 'react';`\nconst useReactId = (React as any)['useId'.toString()] || (() => undefined);\nlet count = 0;\n\nfunction useId(deterministicId?: string): string {\n  const [id, setId] = React.useState<string | undefined>(useReactId());\n  // React versions older than 18 will have client-side ids only.\n  useLayoutEffect(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : '');\n}\n\n// DEPRECATED\nfunction IdProvider({ children }: { children: React.ReactNode }) {\n  React.useEffect(() => {\n    console.warn(ID_PROVIDER_DEPRECATED);\n  }, []);\n  return <>{children}</>;\n}\n\nconst ID_PROVIDER_DEPRECATED = `Warning: The \\`IdProvider\\` has been deprecated. For details, see https://radix-ui.com/docs/primitives/utilities/id-provider`;\n\nexport { IdProvider, useId };\n"],"names":["useReactId","React","toString","count","useId","deterministicId","id","setId","useState","useLayoutEffect","reactId","String","IdProvider","children","useEffect","console","warn","ID_PROVIDER_DEPRECATED","_react","createElement","Fragment"],"version":3,"file":"index.module.js.map"}
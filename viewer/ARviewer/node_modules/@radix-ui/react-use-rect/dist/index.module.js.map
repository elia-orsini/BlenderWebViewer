{"mappings":"mFASA,SAASA,QAAQC,GACf,MAAOC,EAAMC,GAAWC,EAAMC,WAW9B,OAVAD,EAAME,WAAU,KACd,GAAIL,EAAY,CACd,MAAMM,EAAYC,EAAmBP,EAAYE,GACjD,MAAO,KACLA,OAAQM,GACRF,QAIH,CAACN,IACGC","sources":["./packages/react/use-rect/src/useRect.tsx"],"sourcesContent":["import * as React from 'react';\nimport { observeElementRect } from '@radix-ui/rect';\n\nimport type { Measurable } from '@radix-ui/rect';\n\n/**\n * Use this custom hook to get access to an element's rect (getBoundingClientRect)\n * and observe it along time.\n */\nfunction useRect(measurable: Measurable | null) {\n  const [rect, setRect] = React.useState<ClientRect>();\n  React.useEffect(() => {\n    if (measurable) {\n      const unobserve = observeElementRect(measurable, setRect);\n      return () => {\n        setRect(undefined);\n        unobserve();\n      };\n    }\n    return;\n  }, [measurable]);\n  return rect;\n}\n\nexport { useRect };\n"],"names":["useRect","measurable","rect","setRect","React","useState","useEffect","unobserve","observeElementRect","undefined"],"version":3,"file":"index.module.js.map"}